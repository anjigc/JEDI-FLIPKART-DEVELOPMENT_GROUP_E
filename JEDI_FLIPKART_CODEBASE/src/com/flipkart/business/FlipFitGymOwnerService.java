package com.flipkart.business;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

import com.flipkart.bean.FlipFitGymCentre;
import com.flipkart.bean.FlipFitGymOwner;
import com.flipkart.bean.FlipFitSlot;

public class FlipFitGymOwnerService implements FlipFitGymOwnerInterface {

    private HashMap<Integer, FlipFitGymOwner> gymOwners;
    private HashMap<Integer, FlipFitGymCentre> gymCentres;
    private HashMap<Integer, FlipFitSlot> gymSlots;



    public FlipFitGymOwnerService(HashMap<Integer, FlipFitGymOwner> gymOwners, HashMap<Integer, FlipFitGymCentre> gymCentres, HashMap<Integer, FlipFitSlot> gymSlots) {
        this.gymOwners = gymOwners;
        this.gymCentres = gymCentres;
        this.gymSlots = gymSlots;
    }
	
	public FlipFitGymOwner registerGymOwner(int id, String panNo, String address, String Aadhaar) {
        FlipFitGymOwner gymOwner = new FlipFitGymOwner();
        gymOwner.setId(id);
        gymOwner.setPanNo(panNo);
        gymOwner.setAddress(address);
        gymOwner.setAadhaar(Aadhaar);

        gymOwners.put(id, gymOwner); 
        System.out.println("User with email " + " registered as Flipfit Gym Owner Successfully!");
        return gymOwner;
    }

    private Scanner scanner = new Scanner(System.in);

    public void addGym(int ownerId) {
        System.out.print("Enter Gym Name: ");
        String gymName = scanner.nextLine();
        System.out.print("Enter Gym Location: ");
        String location = scanner.nextLine();
        System.out.print("Enter Gym Slots Count: ");
        int slots = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Enter Gym Capacity of each Slot: ");
        int capacity = scanner.nextInt();
        scanner.nextLine();

        // Create a new gym and add it to the gymCentres map
        FlipFitGymCentre gymCentre = new FlipFitGymCentre();
        gymCentre.setGymName(gymName);
        gymCentre.setGymAddress(location);
        gymCentre.setOwnerId(ownerId);
        gymCentre.setCapacity(capacity);
        gymCentre.setStatus("Pending");
        
        int gymId = (gymCentres.size() + 1); // Generate new Gym ID
        gymCentre.setGymId(gymId);
        gymCentres.put(gymId, gymCentre);

        System.out.println("Gym '" + gymName + "' added successfully at " + location + " for " + slots + " slots with capacity of " + capacity + " for each slot.\n");

        // Adding slots to the gym
        for (int i = 0; i < slots; i++) {
            System.out.print("Enter Gym Slot " + (i + 1) + " Details: \n");
            System.out.print("Enter Start Time for Slot " + (i + 1) + ": ");
            String startTime = scanner.nextLine();
            System.out.print("Enter End Time for Slot " + (i + 1) + ": ");
            String endTime = scanner.nextLine();

            FlipFitSlot slot = new FlipFitSlot();
            slot.setGymId(gymId);
            slot.setStartTime(startTime);
            slot.setEndTime(endTime);
            slot.setSlotId(gymId * 10 + i); // Unique slot ID generated by combining gymId and slot number
            gymSlots.put(gymId * 10 + i, slot); 
            System.out.println("Slot details added from start time " + startTime + " to end time " + endTime + "!\n");
        }
    }

    public void removeGym() {
        System.out.print("Enter Gym ID to remove: ");
        int gymId = scanner.nextInt();
        scanner.nextLine(); 

        if (gymCentres.containsKey(gymId)) {
            gymCentres.remove(gymId);
            System.out.println("Gym ID " + gymId + " removed successfully!\n");

            gymSlots.entrySet().removeIf(entry -> entry.getKey() / 10 == gymId);
            System.out.println("Associated slots for Gym ID " + gymId + " removed successfully!\n");
        } else {
            System.out.println("Gym ID " + gymId + " not found!\n");
        }
    }

    public void viewGymList(int ownerId) {
        System.out.println("\nGym List:");
        System.out.println("-------------------------------------");
        System.out.println("| Gym ID | Gym Name  | Location    | Status      |");
        System.out.println("-------------------------------------");

        // Iterate through the gymCentres to display the gym details
        for (FlipFitGymCentre gym : gymCentres.values()) {
            if (gym.getOwnerId() == ownerId) {
                System.out.println("|   " + gym.getGymId() + "    | " + gym.getGymName() + "   | " + gym.getGymAddress() + "   | " + gym.getStatus() + "    |");
            }
        }

        System.out.println("-------------------------------------\n");
    }
}